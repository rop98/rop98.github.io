<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Reece&#39;s Blog</title>
    <link>/tags/linux/</link>
    <description>Recent content in Linux on Reece&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>My Name</copyright>
    <lastBuildDate>Mon, 25 Oct 2021 00:13:50 +0000</lastBuildDate><atom:link href="/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running Vim notes</title>
      <link>/2021/10/25/vim/</link>
      <pubDate>Mon, 25 Oct 2021 00:13:50 +0000</pubDate>
      
      <guid>/2021/10/25/vim/</guid>
      <description>Vim for college pattern matching is amazing \d and :help regular Character classes:	*/character-classes* magic nomagic	matches ~ |/\i|	\i	\i	identifier character (see &#39;isident&#39; option) |/\I|	\I	\I	like &amp;quot;\i&amp;quot;, but excluding digits |/\k|	\k	\k	keyword character (see &#39;iskeyword&#39; option) |/\K|	\K	\K	like &amp;quot;\k&amp;quot;, but excluding digits |/\f|	\f	\f	file name character (see &#39;isfname&#39; option) |/\F|	\F	\F	like &amp;quot;\f&amp;quot;, but excluding digits |/\p|	\p	\p	printable character (see &#39;isprint&#39; option) |/\P|	\P	\P	like &amp;quot;\p&amp;quot;, but excluding digits |/\s|	\s	\s	whitespace character: &amp;lt;Space&amp;gt; and &amp;lt;Tab&amp;gt; |/\S|	\S	\S	non-whitespace character; opposite of \s |/\d|	\d	\d	digit:	[0-9] |/\D|	\D	\D	non-digit:	[^0-9] |/\x|	\x	\x	hex digit:	[0-9A-Fa-f] |/\X|	\X	\X	non-hex digit:	[^0-9A-Fa-f] |/\o|	\o	\o	octal digit:	[0-7] |/\O|	\O	\O	non-octal digit:	[^0-7] |/\w|	\w	\w	word character:	[0-9A-Za-z_] |/\W|	\W	\W	non-word character:	[^0-9A-Za-z_] |/\h|	\h	\h	head of word character:	[A-Za-z_] |/\H|	\H	\H	non-head of word character:	[^A-Za-z_] |/\a|	\a	\a	alphabetic character:	[A-Za-z] |/\A|	\A	\A	non-alphabetic character:	[^A-Za-z] |/\l|	\l	\l	lowercase character:	[a-z] |/\L|	\L	\L	non-lowercase character:	[^a-z] |/\u|	\u	\u	uppercase character:	[A-Z] |/\U|	\U	\U	non-uppercase character	[^A-Z] |/\_|	\_x	\_x	where x is any of the characters above: character class with end-of-line included (end of character classes) magic nomagic	matches ~ |/\e|	\e	\e	&amp;lt;Esc&amp;gt; |/\t|	\t	\t	&amp;lt;Tab&amp;gt; |/\r|	\r	\r	&amp;lt;CR&amp;gt; |/\b|	\b	\b	&amp;lt;BS&amp;gt; |/\n|	\n	\n	end-of-line |/~|	~	\~	last given substitute string |/\1|	\1	\1	same string as matched by first \(\) |/\2|	\2	\2	Like &amp;quot;\1&amp;quot;, but uses second \(\)  so vim has the ability to do quick pattern matching with :s and with searching vim also can repeat the last : command with @:  general vim :set spell!</description>
    </item>
    
    <item>
      <title>Short notes on make files</title>
      <link>/2021/05/22/make/</link>
      <pubDate>Sat, 22 May 2021 00:13:50 +0000</pubDate>
      
      <guid>/2021/05/22/make/</guid>
      <description>Make files for automation for projects (installing deleting options) General Layout  OUTPUT: OPTIONAL DEPENDENCIES COMMAND TO PRODUCE OUTPUT tester.text: echo &amp;quot;this is a test&amp;quot; &amp;gt; tester.txt install: cp file ~/bin/ uninstall: rm file ~/bin/ DEPENDANCIES  i think dependancies are mapped to targets it will run the dependancy first if you do make tester2.txt  tester2.txt: tester.txt cat tester.txt &amp;gt; tester2.txt tester.txt: echo &amp;quot;this is a test&amp;quot; &amp;gt; tester.txt MACROS  Sort of like variables in other languages set a macro / assign a variable with &amp;lsquo;var = value&amp;rsquo; use a macro / use a var with $(var) VARIABLENAME = VALUE OF VARIABLE they expand using syntax $(VARIABLENAME)  TMP = tester1.</description>
    </item>
    
    <item>
      <title>Short notes on recutils </title>
      <link>/2021/05/22/recutilsnotes/</link>
      <pubDate>Sat, 22 May 2021 00:13:50 +0000</pubDate>
      
      <guid>/2021/05/22/recutilsnotes/</guid>
      <description>References  structured-text-tools/README.md at master · dbohdan/structured-text-tools · GitHub  GNU Recutils - GNU Project - Free Software Foundation  GNU Recutils: Top  GNU Recutils: Joining Records GNU Recutils: A Little Example GNU Recutils: Foreign Keys GNU Recutils: Foreign Keys        Basic file structure %rec: Book #%key: Id #%type: Id int #%auto: Id #%unique: ISBN %mandatory: Title %type: Location enum loaned home unknown %doc: + A book in my personal collection.</description>
    </item>
    
    <item>
      <title>ImageMagick cheatsheet</title>
      <link>/2020/12/06/imagemagick/</link>
      <pubDate>Sun, 06 Dec 2020 00:13:50 +0000</pubDate>
      
      <guid>/2020/12/06/imagemagick/</guid>
      <description>References   Advance ImageMagick
  ImageMagick Draw
  ImageMagick Annotation
  Cheatsheet Change format convert source.png destination.jpg
Change format batch mogrify -format jpg *.png
Transparent convert -resize 100% -transparent -strip -quality 90 input.png out.png
Grayscale convert source.png -colorspace Gray destination.png
Invert colors: convert input.png -channel RGB -negate output.png
rotate image (-90 degrees) convert -rotate -90 input.png output.png
Resize convert image.jpg -resize 1024x768 output_file.jpg convert source.jpg -resize 75% destination.</description>
    </item>
    
  </channel>
</rss>
